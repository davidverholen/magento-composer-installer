<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="logger.name">magento-composer-installer</parameter>

        <parameter key="composer.package.types" type="collection">
            <parameter>magento-module</parameter>
            <parameter>magento-core</parameter>
        </parameter>

        <parameter key="modman.file.name">modman</parameter>
        <parameter key="package.file.name">package.xml</parameter>

        <parameter key="modman.ignoreLineCharacters" type="collection">
            <parameter>@</parameter>
            <parameter>#</parameter>
        </parameter>

        <parameter key="magento.package.targets" type="collection">
            <parameter key="magelocal">./app/code/local</parameter>
            <parameter key="magecommunity">./app/code/community</parameter>
            <parameter key="magecore">./app/code/core</parameter>
            <parameter key="magedesign">./app/design</parameter>
            <parameter key="mageetc">./app/etc</parameter>
            <parameter key="magelib">./lib</parameter>
            <parameter key="magelocale">./app/locale</parameter>
            <parameter key="magemedia">./media</parameter>
            <parameter key="mageskin">./skin</parameter>
            <parameter key="mageweb">.</parameter>
            <parameter key="magetest">./tests</parameter>
            <parameter key="mage">.</parameter>
        </parameter>

        <parameter key="package.entity.class">DavidVerholen\Magento\Composer\Installer\Entity\Serializable\Package
        </parameter>
        <parameter key="package.serialize.format">xml</parameter>
    </parameters>

    <services>
        <service id="logger" class="Monolog\Logger">
            <argument>%logger.name%</argument>
        </service>

        <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
        <service id="finder" class="Symfony\Component\Finder\Finder"/>

        <service id="serializerFactory" class="DavidVerholen\Magento\Composer\Installer\App\SerializerFactory"/>
        <service id="serializer"
                 class="JMS\Serializer\Serializer"
                 factory-service="serializerFactory"
                 factory-method="createSerializer"/>

        <service id="abstractService" abstract="true">
            <call method="setLogger">
                <argument type="service" id="logger"/>
            </call>
        </service>

        <service id="resolverService"
                 class="DavidVerholen\Magento\Composer\Installer\Mapping\ResolverService"
                 parent="abstractService">
            <argument type="service" id="filesystem"/>
        </service>

        <service id="abstractMapping" abstract="true">
            <argument type="service" id="filesystem"/>
            <argument type="service" id="finder"/>
        </service>

        <service id="defaultMapping"
                 class="DavidVerholen\Magento\Composer\Installer\Mapping\DefaultMapping"
                 parent="abstractMapping"/>

        <service id="composerMapping"
                 class="DavidVerholen\Magento\Composer\Installer\Mapping\ComposerMapping"
                 parent="abstractMapping"/>

        <service id="modmanMapping"
                 class="DavidVerholen\Magento\Composer\Installer\Mapping\ModmanMapping"
                 parent="abstractMapping">
            <call method="setModmanFileName">
                <argument>%modman.file.name%</argument>
            </call>
            <call method="setIgnoreLinesCharacters">
                <argument>%modman.ignoreLineCharacters%</argument>
            </call>
        </service>

        <service id="packageMapping"
                 class="DavidVerholen\Magento\Composer\Installer\Mapping\PackageMapping"
                 parent="abstractMapping">
            <argument type="service" id="serializer"/>
            <call method="setPackageTargets">
                <argument>%magento.package.targets%</argument>
            </call>
            <call method="setPackageFileName">
                <argument>%package.file.name%</argument>
            </call>
            <call method="setPackageEntityClass">
                <argument>%package.entity.class%</argument>
            </call>
            <call method="setSerializeFormat">
                <argument>%package.serialize.format%</argument>
            </call>
        </service>

        <service id="mappingService"
                 class="DavidVerholen\Magento\Composer\Installer\Mapping\MappingService"
                 parent="abstractService">
            <argument type="service" id="defaultMapping"/>
            <argument type="service" id="resolverService"/>
            <call method="addMapping">
                <argument type="service" id="composerMapping"/>
            </call>
            <call method="addMapping">
                <argument type="service" id="modmanMapping"/>
            </call>
            <call method="addMapping">
                <argument type="service" id="packageMapping"/>
            </call>
        </service>

        <service id="deployService"
                 class="DavidVerholen\Magento\Composer\Installer\Deploy\DeployService"
                 parent="abstractService">
            <argument>%composer.package.types%</argument>
            <argument type="service" id="mappingService"/>
        </service>
    </services>
</container>
